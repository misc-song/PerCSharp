//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace 委托
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QAEntities : DbContext
    {
        public QAEntities()
            : base("name=QAEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Answer> Answers { get; set; }
        public virtual DbSet<QAuser> QAusers { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
    
        public virtual int sp_paged_data(string sqlTable, string sqlColumns, string sqlWhere, string sqlSort, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter rowTotal)
        {
            var sqlTableParameter = sqlTable != null ?
                new ObjectParameter("sqlTable", sqlTable) :
                new ObjectParameter("sqlTable", typeof(string));
    
            var sqlColumnsParameter = sqlColumns != null ?
                new ObjectParameter("sqlColumns", sqlColumns) :
                new ObjectParameter("sqlColumns", typeof(string));
    
            var sqlWhereParameter = sqlWhere != null ?
                new ObjectParameter("sqlWhere", sqlWhere) :
                new ObjectParameter("sqlWhere", typeof(string));
    
            var sqlSortParameter = sqlSort != null ?
                new ObjectParameter("sqlSort", sqlSort) :
                new ObjectParameter("sqlSort", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_paged_data", sqlTableParameter, sqlColumnsParameter, sqlWhereParameter, sqlSortParameter, pageIndexParameter, pageSizeParameter, rowTotal);
        }
    }
}
